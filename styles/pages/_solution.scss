@use "../abstracts/variables" as v;
@use "../abstracts/mixins" as m;
@use "../abstracts/functions" as f;

.solution-wrap {
  position: relative;
  height: 100vh;
  background: url("/image/Our-Solution.jpg") no-repeat center center / cover;
  display: flex;
  align-items: center;
  justify-content: flex-start;
  padding: 8rem;
  color: white;

  @include m.respond-to(lg) {
    width: 100%;
    padding: 3rem;
  }

  @include m.respond-to(md) {
    width: 100%;
    padding: 3rem;
  }

  @include m.respond-to(sm) {
    width: 100%;
    padding: 3rem;
  }

  .solution-overlay {
    position: absolute;
    inset: 0;
    background: rgba(0, 0, 0, 0.6); // efek gelap seperti di gambar
    z-index: 1;
  }

  .solution-content {
    position: relative;
    z-index: 2;
    max-width: 1000px;

    h1 {
      font-size: 3rem;
      font-weight: 800;
      margin-bottom: 1rem;
      line-height: 1.2;
      text-transform: capitalize;
      @include m.respond-to(lg) {
        font-size: 1.75rem;
      }
      @include m.respond-to(md) {
        font-size: 1.75rem;
      }
      @include m.respond-to(sm) {
        font-size: 1.5rem;
      }
    }
    p {
      font-size: 1.75rem;
      font-style: italic;
    }
  }
  .arrow {
    position: absolute;
    z-index: 1;
    bottom: 5%;
    left: 50%;
    transform: translateX(-50%);
    animation: bounceUpDown 2s infinite ease-in-out;
  }

  @keyframes bounceUpDown {
    0%,
    100% {
      transform: translateX(-50%) translateY(0);
    }
    50% {
      transform: translateX(-50%) translateY(-10px);
    }
  }
}

.pembatas {
  background: linear-gradient(280deg, #ffffff7b, v.$primary);
  position: relative;
  overflow: hidden;
  .pembatas-wrap {
    display: flex;
    margin: 0 auto;
    padding: 8rem;
    justify-content: space-between;
    align-items: center;

    h1 {
      font-size: 3rem;
      padding: 1rem;
      color: v.$white;
      width: 800px;
    }
    .image-kiri {
      position: absolute;
      right: 0;
      bottom: -2%;
    }
  }
}

.solution-kedua {
  padding: 8rem;
  text-align: justify;
  .kedua-wrap {
    display: flex;
    flex-direction: row;
    gap: 5rem;
    align-items: center;
    .kedua-wrap-kiri {
      img {
        border-radius: 0.25rem;
      }
    }
    .kedua-wrap-kanan {
      display: flex;
      flex-direction: column;
      gap: 0.25rem;

      h1 {
        font-size: 1.5rem;
      }
      .ctaButton {
        background-color: #2d30e5;
        color: white;
        border: none;
        padding: 0.75rem 1.5rem;
        border-radius: 0.5rem;
        font-weight: 600;
        font-size: 1rem;
        cursor: pointer;
        transition: background 0.3s ease;
        filter: drop-shadow(0 0 0.2rem rgb(98, 142, 219));

        @include m.respond-to(sm) {
          padding: 0.5rem 1rem;
          border-radius: 0;
          font-size: 0.75rem;
        }

        &:hover {
          background-color: #1e40af;
        }
      }
    }
  }
}

.solution-ketiga {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  padding: 8rem;
  gap: 5rem;

  .solution-ketiga-wrap-satu {
    display: flex;
    flex-direction: row;
    align-items: center;
    background-color: v.$white;
    text-align: justify;

    img {
      width: 500px;
      height: 300px;
      object-fit: cover;
      flex-shrink: 0;
      border-radius: 0.25rem;
    }

    .solution-ketiga-wrap-satu-kanan {
      position: relative;
      padding: 3rem;
      overflow: hidden;
      transition: color 0.3s ease;

      &:hover {
        color: v.$primary;
        cursor: default;
      }

      h1 {
        font-size: 2.5rem;
        transition: color 0.3s ease;
      }

      p {
        opacity: 0.8;
        color: v.$dark;
        transition: opacity 0.3s ease, color 0.3s ease;
        font-size: 1.25rem;
      }

      .login-btn {
        background-color: #2d30e5;
        color: white;
        padding: 8px 12px;
        border-radius: 4px;
        border: none;
        cursor: pointer;
        font-weight: bold;
        filter: drop-shadow(0 0 0.2rem rgb(98, 142, 219));
        transition: background-color 0.3s ease-in-out, filter 0.3s ease-in-out;

        &:hover {
          background-color: v.$primary;
          filter: drop-shadow(0 0 0.4rem rgb(98, 142, 219));
        }
      }
    }
  }
}
